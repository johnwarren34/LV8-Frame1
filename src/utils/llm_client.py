import_requests  class_LLMClient: """A_universal_client_for_interacting_with_various_LLM_providers."""  def___init__(self,_provider,_base_url): self.provider_=_provider self.base_url_=_base_url  def_send_request(self,_prompt,_model="gpt-4",_temperature=0.7): """Send_a_request_to_the_configured_LLM_provider.""" if_self.provider_==_"openai": Call_OpenAI_API response_=_requests.post( f"{self.base_url}/v1/completions", headers={"Authorization":_f"Bearer_YOUR_API_KEY"}, json={"model":_model,_"prompt":_prompt,_"temperature":_temperature}, ) return_response.json()["choices"][0]["text"]  elif_self.provider_==_"ollama": Call_Ollama_API_for_local_LLaMA_model response_=_requests.post( f"{self.base_url}/api/generate", json={"model":_model,_"prompt":_prompt}, ) return_response.json()["response"]  elif_self.provider_==_"anthropic": Call_Anthropic's_API response_=_requests.post( f"{self.base_url}/v1/complete", headers={"Authorization":_f"Bearer_YOUR_API_KEY"}, json={"model":_model,_"prompt":_prompt,_"temperature":_temperature}, ) return_response.json()["completion"]  else: raise_ValueError(f"Unknown_provider:_{self.provider}")